<Window x:Class="CoursWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CoursWPF"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <!-- A l"intérieur de la balise Window, on peut utiliser qu'une seule balise racine (Grid, .. ) -->
    <!-- La balise racine doit forcement être de type container -->
    <!-- Le DocPanel permet de positionner les éléments de manière (left, right, top, ..)-->
    <DockPanel>
        <!-- Le Menu est tout simplement le menu windows-->
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_Fichier" >
                <MenuItem.Icon>
                    <Image Source="https://img.bfmtv.com/c/630/420/6ea/978bb45ee10aae30b26393fdd58f6.png"></Image>
                </MenuItem.Icon>
                <MenuItem Header="_Enregistrer"></MenuItem>
                <MenuItem Header="_Fermer"></MenuItem>
                <Separator></Separator>
                <MenuItem Header="_Quitter" Click="Close"></MenuItem>
            </MenuItem>
            <MenuItem Header="_FEEE"></MenuItem>
        </Menu>
        <Grid >
            <!-- La balise GRID permet de définir la fenétre ou plutôt la partie qu'occupe le GRID en tant que grille -->
            <!-- La Grid est défini par des Rows et des Colums-->
            <Grid.RowDefinitions>
                <!-- Le nombre détoile dans l'Height repartit proportionnellement la taille des Rows-->
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="2*"></RowDefinition>
                <!-- Un nombre défini la taille de la row en pixels-->
                <RowDefinition Height="25"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <!-- On peut egalement utiliser "auto" pour attribuer une taille automatique-->
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <!-- Il existe de multiples composants :-->
            <!-- Le bouton -->
            <!-- L'espace nom x:Name permet d'attribuer un nom a un composants afin de le retrouver dans le fichier .xaml.cs et de pouvoir agir dessus-->
            <Button x:Name="bouton1" Content="Bouton" Grid.Column="0" Grid.Row="0" Width="60"></Button>
            <!-- Le label -->
            <Label Content="HelloWorld" Grid.Column="1" Grid.Row="0"></Label>
            <!-- La textbox-->
            <TextBox  Grid.Column="1" Grid.Row="0" Margin="84,10,109,78"/>
            <!-- Le radio bouton (on peut cocher seulement 1 seul choix-->
            <RadioButton x:Name="q1oui" Grid.Column="1" Grid.Row="1" Content="oui" GroupName="Q1" />
            <RadioButton x:Name="q1non" Grid.Column="1" Grid.Row="1" Content="non" GroupName="Q1" Grid.ColumnSpan="2" Margin="72,0,170,0.4" />
            <RadioButton x:Name="q2oui" Grid.Column="1" Grid.Row="1" Content="oui2" GroupName="Q2" Grid.ColumnSpan="2" Margin="0,25,242,209.8" Grid.RowSpan="2"/>
            <RadioButton x:Name="q2non" Grid.Column="1" Grid.Row="1" Content="non2" GroupName="Q2" Grid.ColumnSpan="2" Margin="72,25,170,209.8" Grid.RowSpan="2" />
            <!-- La checkbox (on peut cocher plusieurs choix)-->
            <CheckBox Grid.Column="1" Grid.Row="1" Content="ouioui" Margin="0,67,0,-42" Grid.RowSpan="2"></CheckBox>
            <CheckBox Grid.Column="1" Grid.Row="1" Content="ouiouioui" Margin="0,88,0,-63" Grid.RowSpan="2"></CheckBox>
            <!-- La list View (qui permet d'afficher une liste-->
            <ListView ItemsSource="{Binding listePersonne}" Grid.Column="2" Margin="26,10,29,10" >
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Nom" Width="150" DisplayMemberBinding="{Binding Nom}"/>
                        <GridViewColumn Header="Prénom" Width="150" DisplayMemberBinding="{Binding Prenom}"/>
                    </GridView>
                </ListView.View>
            </ListView>
            <!-- Le Wrap Pannel (permet d'afficher des éléments l'un à la suite de l'autre-->
            <WrapPanel Grid.Column="2" Grid.Row="1">
                <Button  Content="Bouton" Width="60"></Button>
                <Button  Content="Bouton" Width="60"></Button>
                <Button  Content="Bouton" Width="60"></Button>
                <Button  Content="Bouton" Width="60"></Button>
                <Button  Content="Bouton" Width="60"></Button>
                <Button  Content="Bouton" Width="60"></Button>
                <Button  Content="Bouton" Width="60"></Button>
            </WrapPanel>
        </Grid>
    </DockPanel>
</Window>
